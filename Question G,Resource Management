#include<bits/stdc++.h>
using namespace std;

const int N = 1e5+5;
vector<int> g[N];
int vis[N];
int n,m;
set<int> cycle,ans;//edges in cycle
bool flag = false;

void dfs(int node)
{
	if(vis[node] >= 3)
	{
		flag = true;
		return;		
	}
 	vis[node]++;
 	for(auto it : g[node])
 	{
 	 	dfs(it);
 	 	if(flag)
 	 		return;
 	}
}

void dfs1(int node)
{
	ans.insert(node);
	for(auto it : g[node])
	{
		if(ans.find(it) == ans.end())
	 		dfs1(it);
 	}
}

int main()
{

	cin >> n >> m;
	for(int i = 0; i < m; i++)
	{
	 	int a,b;
	 	cin >> a >> b;
	 	g[b].push_back(a);
	}
	for(int i = 0; i < n; i++)
	{
		cycle.clear();
		memset(vis,0,sizeof(vis));
		dfs(i);
		if(flag)
		{
			for(int i = 0; i < n ;i++)
			{
				if(vis[i] >= 2)
			 		cycle.insert(i) ;
			}
			for(auto it : cycle)
				dfs1(it);
			cout <<"Deadlock\n";
			for(auto it : ans)
			{
				cout << it <<" ";		 	
			}
			exit(0);
		}
	}
	cout <<"No Deadlock";
}
